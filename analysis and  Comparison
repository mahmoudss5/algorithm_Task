for the iterative algorithm : 
algorithm uses a nested loop to read the matrix and a single loop to compute both diagonal sums and it use arrays insted of vectors.
the Time Complexity: O(n^2) for input, O(n) for processing â†’ Overall: O(n^2)
the space  complexity: O(n^2) for matrix storage

for the second one (recursive algorithm) : 
Description: Two recursive functions are used. One for the main diagonal (from top-left to bottom-right), and another for the secondary diagonal (from top-right to bottom-left). 

the Time Complexity :
1- Reading input: O(n^2)
2- Recursion: O(n) calls per function â†’ Overall for the algorithm: O(n^2)
Space Complexity: O(n^2) for matrix + O(n) call stack

now the Comparison :  we will compare both of them in 4 points 
1-  for the  Clarity we can see that  iterative approach is more simple and direct more than the recursive one   so here  the best one is >> ( iterative )
2- for the Memory Usage   in store the databoth of them used o(n^2) space however the reucursive one use additional o(n) int stack to call the functions  so here  the best one is >> ( iterative )
3- in the pereforamnce the iterative one 	Slightly faster in practice   so here  the best one is >> ( iterative )
4- for the maintainability iterative algorithm is easy and can be maintainabilited esaily      so here  the best one is >> ( iterative )
                     
